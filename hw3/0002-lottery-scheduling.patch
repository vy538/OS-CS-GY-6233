From 25b93a16462310ee3351664d8d1e6837def15da7 Mon Sep 17 00:00:00 2001
From: vy538 <good5538@gmail.com>
Date: Wed, 13 Nov 2019 15:09:05 -0500
Subject: [PATCH 2/2] lottery scheduling

---
 proc.c    | 13 ++++---------
 proc.h    |  1 -
 sysproc.c |  8 +++++---
 3 files changed, 9 insertions(+), 13 deletions(-)

diff --git a/proc.c b/proc.c
index 53843f5..4a777f1 100644
--- a/proc.c
+++ b/proc.c
@@ -52,7 +52,7 @@ found:
   p->pid = nextpid++;
   //tickets start
   p->tickets = 20;
-  //tickets end
+  //
   release(&ptable.lock);
 
   // Allocate kernel stack.
@@ -274,12 +274,6 @@ int tickets_sum = 0;
   return tickets_sum;
 };
 
-void
-setTickets(struct proc* cp, int ticN){
-  acquire(&ptable.lock);
-  cp->tickets = ticN;
-  release(&ptable.lock);
-}
 
 //PAGEBREAK: 42
 // Per-CPU process scheduler.
@@ -306,13 +300,13 @@ scheduler(void)
     acquire(&ptable.lock);
     // lottery code
     int total_tickets = getTotalLottery();
-    int winning_ticket = random_at_most(total_tickets);
+    long winning_ticket = random_at_most(total_tickets);
+    
     int current = 0;
     //
     for(p = ptable.proc; p < &ptable.proc[NPROC]; p++){
       if(p->state != RUNNABLE)
         continue;
-
       //lottery
       current += p->tickets;
       if(current<winning_ticket){
@@ -334,6 +328,7 @@ scheduler(void)
       // Process is done running for now.
       // It should have changed its p->state before coming back.
       proc = 0;
+      break;
     }
     release(&ptable.lock);
 
diff --git a/proc.h b/proc.h
index f8cb2c1..b4bdba4 100644
--- a/proc.h
+++ b/proc.h
@@ -69,7 +69,6 @@ struct proc {
   int tickets;                 //lottery ticket
 };
 
-void setTickets(struct proc* cp, int ticN);
 // Process memory is laid out contiguously, low addresses first:
 //   text
 //   original data and bss
diff --git a/sysproc.c b/sysproc.c
index b46f2e7..1e3f133 100644
--- a/sysproc.c
+++ b/sysproc.c
@@ -11,9 +11,11 @@ int
 sys_settickets(void)
 {
   int number;
-  if(argint(0,&number)<0)
-    return -1;
-  setTickets(proc,number);
+  if(argint(0,&number)<0){
+    proc->tickets = 20;
+   }else{
+    proc->tickets = number;
+   }
   return 0;
 }
 
-- 
1.9.1

