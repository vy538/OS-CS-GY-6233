From 97f70fca0b1d141abdcc24c2cda206074dd1e3e8 Mon Sep 17 00:00:00 2001
From: vy538 <good5538@gmail.com>
Date: Wed, 13 Nov 2019 21:27:29 -0500
Subject: [PATCH 3/3] lottery scheduling

---
 proc.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/proc.c b/proc.c
index 4a777f1..e59e7e6 100644
--- a/proc.c
+++ b/proc.c
@@ -307,6 +307,7 @@ scheduler(void)
     for(p = ptable.proc; p < &ptable.proc[NPROC]; p++){
       if(p->state != RUNNABLE)
         continue;
+      
       //lottery
       current += p->tickets;
       if(current<winning_ticket){
@@ -314,7 +315,6 @@ scheduler(void)
       }
       //
 
-
       // Switch to chosen process.  It is the process's job
       // to release ptable.lock and then reacquire it
       // before jumping back to us.
@@ -495,7 +495,7 @@ procdump(void)
       state = states[p->state];
     else
       state = "???";
-    cprintf("%d %s %s", p->pid, state, p->name);
+    cprintf("%d %s %s %d\n", p->pid, state, p->name, p->tickets);
     if(p->state == SLEEPING){
       getcallerpcs((uint*)p->context->ebp+2, pc);
       for(i=0; i<10 && pc[i] != 0; i++)
-- 
1.9.1

